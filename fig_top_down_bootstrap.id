%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica
%%Pages: 1
%%BoundingBox: 94 253 521 548
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 8 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 FontBBox 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 2 2 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.799705 0 0 0.799705 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Poly
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t u
%I 4
164 353
164 670
165 670
165 353
4 Poly
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -9.57333 0 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 134 370 ] concat
%I
[
(    0-)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 130 432 ] concat
%I
[
(  0.2-)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 130 494 ] concat
%I
[
(  0.4-)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 130 557 ] concat
%I
[
(  0.6-)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 130 619 ] concat
%I
[
(  0.8-)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 134 682 ] concat
%I
[
(    1-)
] Text
End

End %I eop

Begin %I MLine
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
none SetP %I p n
%I t u
%I 200
178 357
180 357
183 357
185 357
187 357
189 357
192 357
194 357
196 357
199 357
201 357
203 357
205 357
208 357
210 357
212 357
214 357
217 357
219 357
221 357
224 357
226 357
228 357
230 357
233 357
235 357
237 357
239 357
242 357
244 361
246 364
248 367
251 372
253 377
255 383
258 390
260 396
262 404
264 411
267 418
269 425
271 432
273 438
276 444
278 450
280 456
283 461
285 466
287 470
289 475
292 478
294 482
296 485
298 488
301 491
303 494
305 496
308 498
310 500
312 502
314 504
317 505
319 507
321 508
323 509
326 510
328 511
330 512
332 513
335 514
337 515
339 516
342 516
344 517
346 517
348 518
351 518
353 519
355 536
357 562
360 591
362 617
364 634
367 643
369 648
371 652
373 654
376 656
378 657
380 658
382 659
385 659
387 660
389 660
392 661
394 661
396 661
398 661
401 662
403 662
405 662
407 662
410 662
412 662
414 662
417 662
419 662
421 662
423 663
426 663
428 663
430 663
432 663
435 663
437 663
439 663
441 663
444 663
446 663
448 663
451 663
453 663
455 663
457 663
460 663
462 663
464 663
466 663
469 663
471 663
473 663
476 663
478 663
480 663
482 663
485 663
487 663
489 663
491 663
494 663
496 663
498 663
501 663
503 663
505 663
507 663
510 663
512 663
514 663
516 663
519 663
521 663
523 663
525 663
528 663
530 663
532 663
535 663
537 663
539 663
541 663
544 663
546 663
548 663
550 663
553 663
555 663
557 663
560 663
562 663
564 663
566 663
569 663
571 663
573 663
575 663
578 663
580 663
582 663
585 663
587 663
589 663
591 663
594 663
596 663
598 663
600 663
603 663
605 663
607 663
609 663
612 663
614 663
616 663
619 663
621 663
623 663
625 663
628 663
630 663
200 MLine
%I 1
End

Begin %I MLine
%I b 65520
2 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
none SetP %I p n
%I t u
%I 200
178 357
180 357
183 357
185 357
187 357
189 357
192 357
194 357
196 357
199 357
201 357
203 357
205 357
208 357
210 357
212 357
214 357
217 357
219 357
221 357
224 357
226 357
228 357
230 357
233 357
235 357
237 357
239 357
242 357
244 357
246 357
248 357
251 357
253 357
255 357
258 357
260 357
262 357
264 357
267 357
269 357
271 357
273 357
276 357
278 357
280 357
283 357
285 357
287 357
289 357
292 357
294 357
296 357
298 357
301 357
303 357
305 357
308 357
310 357
312 357
314 357
317 357
319 357
321 357
323 357
326 357
328 357
330 357
332 357
335 357
337 357
339 357
342 357
344 361
346 366
348 374
351 386
353 401
355 419
357 454
360 515
362 584
364 622
367 638
369 645
371 650
373 653
376 655
378 656
380 657
382 658
385 659
387 659
389 660
392 660
394 661
396 661
398 661
401 661
403 662
405 662
407 662
410 662
412 662
414 662
417 662
419 662
421 662
423 663
426 663
428 663
430 663
432 663
435 663
437 663
439 663
441 663
444 663
446 663
448 663
451 663
453 663
455 663
457 663
460 663
462 663
464 663
466 663
469 663
471 663
473 663
476 663
478 663
480 663
482 663
485 663
487 663
489 663
491 663
494 663
496 663
498 663
501 663
503 663
505 663
507 663
510 663
512 663
514 663
516 663
519 663
521 663
523 663
525 663
528 663
530 663
532 663
535 663
537 663
539 663
541 663
544 663
546 663
548 663
550 663
553 663
555 663
557 663
560 663
562 663
564 663
566 663
569 663
571 663
573 663
575 663
578 663
580 663
582 663
585 663
587 663
589 663
591 663
594 663
596 663
598 663
600 663
603 663
605 663
607 663
609 663
612 663
614 663
616 663
619 663
621 663
623 663
625 663
628 663
630 663
200 MLine
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 209.247 571.653 ] concat
%I
[
(Hidden1 Act)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 412.687 483.573 ] concat
%I
[
(Hidden2 Act)
] Text
End

Begin %I Poly
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t u
%I 4
178 340
178 341
633 341
633 340
4 Poly
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 174 339 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 216 339 ] concat
%I
[
(20)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 261 339 ] concat
%I
[
(40)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 307 339 ] concat
%I
[
(60)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 352 339 ] concat
%I
[
(80)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 394 339 ] concat
%I
[
(100)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 439 339 ] concat
%I
[
(120)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 485 339 ] concat
%I
[
(140)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 530 339 ] concat
%I
[
(160)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 575 339 ] concat
%I
[
(180)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 621 339 ] concat
%I
[
(200)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.19667 -0 -0 1.19667 -32.31 -27.5233 ] concat
%I
241 481 287 445 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.19667 -0 -0 1.19667 -32.31 -27.5233 ] concat
%I
369 421 329 429 Line
%I 1
End

End %I eop

showpage

%%Trailer

end
